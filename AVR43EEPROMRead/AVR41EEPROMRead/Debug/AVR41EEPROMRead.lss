
AVR41EEPROMRead.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000026  00800100  0000083a  000008ce  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000083a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000045  00800126  00800126  000008f4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000008f4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000950  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  00000990  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c4d  00000000  00000000  00000a18  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000880  00000000  00000000  00001665  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005c9  00000000  00000000  00001ee5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000144  00000000  00000000  000024b0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000512  00000000  00000000  000025f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000004e0  00000000  00000000  00002b06  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  00002fe6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 9c 00 	jmp	0x138	; 0x138 <__vector_18>
  4c:	0c 94 ca 00 	jmp	0x194	; 0x194 <__vector_19>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ea e3       	ldi	r30, 0x3A	; 58
  7c:	f8 e0       	ldi	r31, 0x08	; 8
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 32       	cpi	r26, 0x26	; 38
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a6 e2       	ldi	r26, 0x26	; 38
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ab 36       	cpi	r26, 0x6B	; 107
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 5a 00 	call	0xb4	; 0xb4 <main>
  9e:	0c 94 1b 04 	jmp	0x836	; 0x836 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <EEPROM_read>:
}

unsigned char EEPROM_read(unsigned int uiAddress)
{
	/* Önceki okuma ve yazmanýn bitmesini bekle */
	while(EECR & (1<<EEPE))
  a6:	f9 99       	sbic	0x1f, 1	; 31
  a8:	fe cf       	rjmp	.-4      	; 0xa6 <EEPROM_read>
	;
	/* Adres deðerini güncelle */
	EEAR = uiAddress;
  aa:	92 bd       	out	0x22, r25	; 34
  ac:	81 bd       	out	0x21, r24	; 33
	/* Okuma iþlemini baþlat. */
	EECR |= (1<<EERE);
  ae:	f8 9a       	sbi	0x1f, 0	; 31
	/* Veri yazmacýný deðer olarak döndür */
	return EEDR;
  b0:	80 b5       	in	r24, 0x20	; 32
  b2:	08 95       	ret

000000b4 <main>:
#include <util/delay.h>
#include "uart.h"
unsigned char EEPROM_read(unsigned int uiAddress);

int main(void)
{
  b4:	cf 93       	push	r28
  b6:	df 93       	push	r29
  b8:	cd b7       	in	r28, 0x3d	; 61
  ba:	de b7       	in	r29, 0x3e	; 62
  bc:	64 97       	sbiw	r28, 0x14	; 20
  be:	0f b6       	in	r0, 0x3f	; 63
  c0:	f8 94       	cli
  c2:	de bf       	out	0x3e, r29	; 62
  c4:	0f be       	out	0x3f, r0	; 63
  c6:	cd bf       	out	0x3d, r28	; 61
     sei();
  c8:	78 94       	sei
     uart_init(UART_BAUD_SELECT(9600,F_CPU));
  ca:	87 e6       	ldi	r24, 0x67	; 103
  cc:	90 e0       	ldi	r25, 0x00	; 0
  ce:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <uart_init>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  d2:	2f ef       	ldi	r18, 0xFF	; 255
  d4:	81 ee       	ldi	r24, 0xE1	; 225
  d6:	94 e0       	ldi	r25, 0x04	; 4
  d8:	21 50       	subi	r18, 0x01	; 1
  da:	80 40       	sbci	r24, 0x00	; 0
  dc:	90 40       	sbci	r25, 0x00	; 0
  de:	e1 f7       	brne	.-8      	; 0xd8 <main+0x24>
  e0:	00 c0       	rjmp	.+0      	; 0xe2 <main+0x2e>
  e2:	00 00       	nop
     _delay_ms(100);
     uart_puts("EEPROM OKUMA \n");
  e4:	80 e0       	ldi	r24, 0x00	; 0
  e6:	91 e0       	ldi	r25, 0x01	; 1
  e8:	0e 94 22 01 	call	0x244	; 0x244 <uart_puts>
	 unsigned int address = 0;
  ec:	00 e0       	ldi	r16, 0x00	; 0
  ee:	10 e0       	ldi	r17, 0x00	; 0
	while(1)
	{	
	veri = EEPROM_read(address);
	if (veri == 0)
	break;
	sprintf(buf,"Adres:%i    Veri:%i \n", address, veri);
  f0:	0f 2e       	mov	r0, r31
  f2:	ff e0       	ldi	r31, 0x0F	; 15
  f4:	cf 2e       	mov	r12, r31
  f6:	f1 e0       	ldi	r31, 0x01	; 1
  f8:	df 2e       	mov	r13, r31
  fa:	f0 2d       	mov	r31, r0
  fc:	ce 01       	movw	r24, r28
  fe:	01 96       	adiw	r24, 0x01	; 1
 100:	7c 01       	movw	r14, r24
	 unsigned int address = 0;
	 unsigned char veri = 0;
	 char buf[20];
	while(1)
	{	
	veri = EEPROM_read(address);
 102:	c8 01       	movw	r24, r16
 104:	0e 94 53 00 	call	0xa6	; 0xa6 <EEPROM_read>
	if (veri == 0)
 108:	88 23       	and	r24, r24
 10a:	a9 f0       	breq	.+42     	; 0x136 <main+0x82>
	break;
	sprintf(buf,"Adres:%i    Veri:%i \n", address, veri);
 10c:	1f 92       	push	r1
 10e:	8f 93       	push	r24
 110:	1f 93       	push	r17
 112:	0f 93       	push	r16
 114:	df 92       	push	r13
 116:	cf 92       	push	r12
 118:	ff 92       	push	r15
 11a:	ef 92       	push	r14
 11c:	0e 94 31 01 	call	0x262	; 0x262 <sprintf>
	uart_puts(buf);
 120:	c7 01       	movw	r24, r14
 122:	0e 94 22 01 	call	0x244	; 0x244 <uart_puts>
	address++;	 
 126:	0f 5f       	subi	r16, 0xFF	; 255
 128:	1f 4f       	sbci	r17, 0xFF	; 255
	}
 12a:	0f b6       	in	r0, 0x3f	; 63
 12c:	f8 94       	cli
 12e:	de bf       	out	0x3e, r29	; 62
 130:	0f be       	out	0x3f, r0	; 63
 132:	cd bf       	out	0x3d, r28	; 61
 134:	e6 cf       	rjmp	.-52     	; 0x102 <main+0x4e>
 136:	ff cf       	rjmp	.-2      	; 0x136 <main+0x82>

00000138 <__vector_18>:
    UART_RxTail = tmptail; 
    
    UART_LastRxError = 0;
    return (lastRxError << 8) + data;

}/* uart_getc */
 138:	1f 92       	push	r1
 13a:	0f 92       	push	r0
 13c:	0f b6       	in	r0, 0x3f	; 63
 13e:	0f 92       	push	r0
 140:	11 24       	eor	r1, r1
 142:	2f 93       	push	r18
 144:	8f 93       	push	r24
 146:	9f 93       	push	r25
 148:	ef 93       	push	r30
 14a:	ff 93       	push	r31
 14c:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
 150:	20 91 c6 00 	lds	r18, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
 154:	8c 71       	andi	r24, 0x1C	; 28
 156:	e0 91 28 01 	lds	r30, 0x0128	; 0x800128 <UART_RxHead>
 15a:	ef 5f       	subi	r30, 0xFF	; 255
 15c:	ef 71       	andi	r30, 0x1F	; 31
 15e:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <UART_RxTail>
 162:	e9 17       	cp	r30, r25
 164:	39 f0       	breq	.+14     	; 0x174 <__vector_18+0x3c>
 166:	e0 93 28 01 	sts	0x0128, r30	; 0x800128 <UART_RxHead>
 16a:	f0 e0       	ldi	r31, 0x00	; 0
 16c:	e5 5d       	subi	r30, 0xD5	; 213
 16e:	fe 4f       	sbci	r31, 0xFE	; 254
 170:	20 83       	st	Z, r18
 172:	01 c0       	rjmp	.+2      	; 0x176 <__vector_18+0x3e>
 174:	82 e0       	ldi	r24, 0x02	; 2
 176:	90 91 26 01 	lds	r25, 0x0126	; 0x800126 <__data_end>
 17a:	89 2b       	or	r24, r25
 17c:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <__data_end>
 180:	ff 91       	pop	r31
 182:	ef 91       	pop	r30
 184:	9f 91       	pop	r25
 186:	8f 91       	pop	r24
 188:	2f 91       	pop	r18
 18a:	0f 90       	pop	r0
 18c:	0f be       	out	0x3f, r0	; 63
 18e:	0f 90       	pop	r0
 190:	1f 90       	pop	r1
 192:	18 95       	reti

00000194 <__vector_19>:
 194:	1f 92       	push	r1
 196:	0f 92       	push	r0
 198:	0f b6       	in	r0, 0x3f	; 63
 19a:	0f 92       	push	r0
 19c:	11 24       	eor	r1, r1
 19e:	8f 93       	push	r24
 1a0:	9f 93       	push	r25
 1a2:	ef 93       	push	r30
 1a4:	ff 93       	push	r31
 1a6:	90 91 2a 01 	lds	r25, 0x012A	; 0x80012a <UART_TxHead>
 1aa:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <UART_TxTail>
 1ae:	98 17       	cp	r25, r24
 1b0:	69 f0       	breq	.+26     	; 0x1cc <__vector_19+0x38>
 1b2:	e0 91 29 01 	lds	r30, 0x0129	; 0x800129 <UART_TxTail>
 1b6:	ef 5f       	subi	r30, 0xFF	; 255
 1b8:	ef 71       	andi	r30, 0x1F	; 31
 1ba:	e0 93 29 01 	sts	0x0129, r30	; 0x800129 <UART_TxTail>
 1be:	f0 e0       	ldi	r31, 0x00	; 0
 1c0:	e5 5b       	subi	r30, 0xB5	; 181
 1c2:	fe 4f       	sbci	r31, 0xFE	; 254
 1c4:	80 81       	ld	r24, Z
 1c6:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
 1ca:	05 c0       	rjmp	.+10     	; 0x1d6 <__vector_19+0x42>
 1cc:	e1 ec       	ldi	r30, 0xC1	; 193
 1ce:	f0 e0       	ldi	r31, 0x00	; 0
 1d0:	80 81       	ld	r24, Z
 1d2:	8f 7d       	andi	r24, 0xDF	; 223
 1d4:	80 83       	st	Z, r24
 1d6:	ff 91       	pop	r31
 1d8:	ef 91       	pop	r30
 1da:	9f 91       	pop	r25
 1dc:	8f 91       	pop	r24
 1de:	0f 90       	pop	r0
 1e0:	0f be       	out	0x3f, r0	; 63
 1e2:	0f 90       	pop	r0
 1e4:	1f 90       	pop	r1
 1e6:	18 95       	reti

000001e8 <uart_init>:
 1e8:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <UART_TxHead>
 1ec:	10 92 29 01 	sts	0x0129, r1	; 0x800129 <UART_TxTail>
 1f0:	10 92 28 01 	sts	0x0128, r1	; 0x800128 <UART_RxHead>
 1f4:	10 92 27 01 	sts	0x0127, r1	; 0x800127 <UART_RxTail>
 1f8:	99 23       	and	r25, r25
 1fa:	1c f4       	brge	.+6      	; 0x202 <uart_init+0x1a>
 1fc:	22 e0       	ldi	r18, 0x02	; 2
 1fe:	20 93 c0 00 	sts	0x00C0, r18	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
 202:	90 78       	andi	r25, 0x80	; 128
 204:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
 208:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
 20c:	88 e9       	ldi	r24, 0x98	; 152
 20e:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
 212:	86 e0       	ldi	r24, 0x06	; 6
 214:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
 218:	08 95       	ret

0000021a <uart_putc>:
void uart_putc(unsigned char data)
{
    unsigned char tmphead;

    
    tmphead  = (UART_TxHead + 1) & UART_TX_BUFFER_MASK;
 21a:	20 91 2a 01 	lds	r18, 0x012A	; 0x80012a <UART_TxHead>
 21e:	2f 5f       	subi	r18, 0xFF	; 255
 220:	2f 71       	andi	r18, 0x1F	; 31
    
    while ( tmphead == UART_TxTail ){
 222:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <UART_TxTail>
 226:	29 17       	cp	r18, r25
 228:	e1 f3       	breq	.-8      	; 0x222 <uart_putc+0x8>
        ;/* wait for free space in buffer */
    }
    
    UART_TxBuf[tmphead] = data;
 22a:	e2 2f       	mov	r30, r18
 22c:	f0 e0       	ldi	r31, 0x00	; 0
 22e:	e5 5b       	subi	r30, 0xB5	; 181
 230:	fe 4f       	sbci	r31, 0xFE	; 254
 232:	80 83       	st	Z, r24
    UART_TxHead = tmphead;
 234:	20 93 2a 01 	sts	0x012A, r18	; 0x80012a <UART_TxHead>

    /* enable UDRE interrupt */
    UART0_CONTROL    |= _BV(UART0_UDRIE);
 238:	e1 ec       	ldi	r30, 0xC1	; 193
 23a:	f0 e0       	ldi	r31, 0x00	; 0
 23c:	80 81       	ld	r24, Z
 23e:	80 62       	ori	r24, 0x20	; 32
 240:	80 83       	st	Z, r24
 242:	08 95       	ret

00000244 <uart_puts>:
Purpose:  transmit string to UART
Input:    string to be transmitted
Returns:  none          
**************************************************************************/
void uart_puts(const char *s )
{
 244:	cf 93       	push	r28
 246:	df 93       	push	r29
 248:	ec 01       	movw	r28, r24
    while (*s) 
 24a:	88 81       	ld	r24, Y
 24c:	88 23       	and	r24, r24
 24e:	31 f0       	breq	.+12     	; 0x25c <uart_puts+0x18>
 250:	21 96       	adiw	r28, 0x01	; 1
      uart_putc(*s++);
 252:	0e 94 0d 01 	call	0x21a	; 0x21a <uart_putc>
Input:    string to be transmitted
Returns:  none          
**************************************************************************/
void uart_puts(const char *s )
{
    while (*s) 
 256:	89 91       	ld	r24, Y+
 258:	81 11       	cpse	r24, r1
 25a:	fb cf       	rjmp	.-10     	; 0x252 <uart_puts+0xe>
      uart_putc(*s++);

}/* uart_puts */
 25c:	df 91       	pop	r29
 25e:	cf 91       	pop	r28
 260:	08 95       	ret

00000262 <sprintf>:
 262:	ae e0       	ldi	r26, 0x0E	; 14
 264:	b0 e0       	ldi	r27, 0x00	; 0
 266:	e7 e3       	ldi	r30, 0x37	; 55
 268:	f1 e0       	ldi	r31, 0x01	; 1
 26a:	0c 94 f2 03 	jmp	0x7e4	; 0x7e4 <__prologue_saves__+0x1c>
 26e:	0d 89       	ldd	r16, Y+21	; 0x15
 270:	1e 89       	ldd	r17, Y+22	; 0x16
 272:	86 e0       	ldi	r24, 0x06	; 6
 274:	8c 83       	std	Y+4, r24	; 0x04
 276:	1a 83       	std	Y+2, r17	; 0x02
 278:	09 83       	std	Y+1, r16	; 0x01
 27a:	8f ef       	ldi	r24, 0xFF	; 255
 27c:	9f e7       	ldi	r25, 0x7F	; 127
 27e:	9e 83       	std	Y+6, r25	; 0x06
 280:	8d 83       	std	Y+5, r24	; 0x05
 282:	ae 01       	movw	r20, r28
 284:	47 5e       	subi	r20, 0xE7	; 231
 286:	5f 4f       	sbci	r21, 0xFF	; 255
 288:	6f 89       	ldd	r22, Y+23	; 0x17
 28a:	78 8d       	ldd	r23, Y+24	; 0x18
 28c:	ce 01       	movw	r24, r28
 28e:	01 96       	adiw	r24, 0x01	; 1
 290:	0e 94 53 01 	call	0x2a6	; 0x2a6 <vfprintf>
 294:	ef 81       	ldd	r30, Y+7	; 0x07
 296:	f8 85       	ldd	r31, Y+8	; 0x08
 298:	e0 0f       	add	r30, r16
 29a:	f1 1f       	adc	r31, r17
 29c:	10 82       	st	Z, r1
 29e:	2e 96       	adiw	r28, 0x0e	; 14
 2a0:	e4 e0       	ldi	r30, 0x04	; 4
 2a2:	0c 94 0e 04 	jmp	0x81c	; 0x81c <__epilogue_restores__+0x1c>

000002a6 <vfprintf>:
 2a6:	ab e0       	ldi	r26, 0x0B	; 11
 2a8:	b0 e0       	ldi	r27, 0x00	; 0
 2aa:	e9 e5       	ldi	r30, 0x59	; 89
 2ac:	f1 e0       	ldi	r31, 0x01	; 1
 2ae:	0c 94 e4 03 	jmp	0x7c8	; 0x7c8 <__prologue_saves__>
 2b2:	6c 01       	movw	r12, r24
 2b4:	7b 01       	movw	r14, r22
 2b6:	8a 01       	movw	r16, r20
 2b8:	fc 01       	movw	r30, r24
 2ba:	17 82       	std	Z+7, r1	; 0x07
 2bc:	16 82       	std	Z+6, r1	; 0x06
 2be:	83 81       	ldd	r24, Z+3	; 0x03
 2c0:	81 ff       	sbrs	r24, 1
 2c2:	cc c1       	rjmp	.+920    	; 0x65c <__LOCK_REGION_LENGTH__+0x25c>
 2c4:	ce 01       	movw	r24, r28
 2c6:	01 96       	adiw	r24, 0x01	; 1
 2c8:	3c 01       	movw	r6, r24
 2ca:	f6 01       	movw	r30, r12
 2cc:	93 81       	ldd	r25, Z+3	; 0x03
 2ce:	f7 01       	movw	r30, r14
 2d0:	93 fd       	sbrc	r25, 3
 2d2:	85 91       	lpm	r24, Z+
 2d4:	93 ff       	sbrs	r25, 3
 2d6:	81 91       	ld	r24, Z+
 2d8:	7f 01       	movw	r14, r30
 2da:	88 23       	and	r24, r24
 2dc:	09 f4       	brne	.+2      	; 0x2e0 <vfprintf+0x3a>
 2de:	ba c1       	rjmp	.+884    	; 0x654 <__LOCK_REGION_LENGTH__+0x254>
 2e0:	85 32       	cpi	r24, 0x25	; 37
 2e2:	39 f4       	brne	.+14     	; 0x2f2 <vfprintf+0x4c>
 2e4:	93 fd       	sbrc	r25, 3
 2e6:	85 91       	lpm	r24, Z+
 2e8:	93 ff       	sbrs	r25, 3
 2ea:	81 91       	ld	r24, Z+
 2ec:	7f 01       	movw	r14, r30
 2ee:	85 32       	cpi	r24, 0x25	; 37
 2f0:	29 f4       	brne	.+10     	; 0x2fc <vfprintf+0x56>
 2f2:	b6 01       	movw	r22, r12
 2f4:	90 e0       	ldi	r25, 0x00	; 0
 2f6:	0e 94 4a 03 	call	0x694	; 0x694 <fputc>
 2fa:	e7 cf       	rjmp	.-50     	; 0x2ca <vfprintf+0x24>
 2fc:	91 2c       	mov	r9, r1
 2fe:	21 2c       	mov	r2, r1
 300:	31 2c       	mov	r3, r1
 302:	ff e1       	ldi	r31, 0x1F	; 31
 304:	f3 15       	cp	r31, r3
 306:	d8 f0       	brcs	.+54     	; 0x33e <vfprintf+0x98>
 308:	8b 32       	cpi	r24, 0x2B	; 43
 30a:	79 f0       	breq	.+30     	; 0x32a <vfprintf+0x84>
 30c:	38 f4       	brcc	.+14     	; 0x31c <vfprintf+0x76>
 30e:	80 32       	cpi	r24, 0x20	; 32
 310:	79 f0       	breq	.+30     	; 0x330 <vfprintf+0x8a>
 312:	83 32       	cpi	r24, 0x23	; 35
 314:	a1 f4       	brne	.+40     	; 0x33e <vfprintf+0x98>
 316:	23 2d       	mov	r18, r3
 318:	20 61       	ori	r18, 0x10	; 16
 31a:	1d c0       	rjmp	.+58     	; 0x356 <vfprintf+0xb0>
 31c:	8d 32       	cpi	r24, 0x2D	; 45
 31e:	61 f0       	breq	.+24     	; 0x338 <vfprintf+0x92>
 320:	80 33       	cpi	r24, 0x30	; 48
 322:	69 f4       	brne	.+26     	; 0x33e <vfprintf+0x98>
 324:	23 2d       	mov	r18, r3
 326:	21 60       	ori	r18, 0x01	; 1
 328:	16 c0       	rjmp	.+44     	; 0x356 <vfprintf+0xb0>
 32a:	83 2d       	mov	r24, r3
 32c:	82 60       	ori	r24, 0x02	; 2
 32e:	38 2e       	mov	r3, r24
 330:	e3 2d       	mov	r30, r3
 332:	e4 60       	ori	r30, 0x04	; 4
 334:	3e 2e       	mov	r3, r30
 336:	2a c0       	rjmp	.+84     	; 0x38c <vfprintf+0xe6>
 338:	f3 2d       	mov	r31, r3
 33a:	f8 60       	ori	r31, 0x08	; 8
 33c:	1d c0       	rjmp	.+58     	; 0x378 <vfprintf+0xd2>
 33e:	37 fc       	sbrc	r3, 7
 340:	2d c0       	rjmp	.+90     	; 0x39c <vfprintf+0xf6>
 342:	20 ed       	ldi	r18, 0xD0	; 208
 344:	28 0f       	add	r18, r24
 346:	2a 30       	cpi	r18, 0x0A	; 10
 348:	40 f0       	brcs	.+16     	; 0x35a <vfprintf+0xb4>
 34a:	8e 32       	cpi	r24, 0x2E	; 46
 34c:	b9 f4       	brne	.+46     	; 0x37c <vfprintf+0xd6>
 34e:	36 fc       	sbrc	r3, 6
 350:	81 c1       	rjmp	.+770    	; 0x654 <__LOCK_REGION_LENGTH__+0x254>
 352:	23 2d       	mov	r18, r3
 354:	20 64       	ori	r18, 0x40	; 64
 356:	32 2e       	mov	r3, r18
 358:	19 c0       	rjmp	.+50     	; 0x38c <vfprintf+0xe6>
 35a:	36 fe       	sbrs	r3, 6
 35c:	06 c0       	rjmp	.+12     	; 0x36a <vfprintf+0xc4>
 35e:	8a e0       	ldi	r24, 0x0A	; 10
 360:	98 9e       	mul	r9, r24
 362:	20 0d       	add	r18, r0
 364:	11 24       	eor	r1, r1
 366:	92 2e       	mov	r9, r18
 368:	11 c0       	rjmp	.+34     	; 0x38c <vfprintf+0xe6>
 36a:	ea e0       	ldi	r30, 0x0A	; 10
 36c:	2e 9e       	mul	r2, r30
 36e:	20 0d       	add	r18, r0
 370:	11 24       	eor	r1, r1
 372:	22 2e       	mov	r2, r18
 374:	f3 2d       	mov	r31, r3
 376:	f0 62       	ori	r31, 0x20	; 32
 378:	3f 2e       	mov	r3, r31
 37a:	08 c0       	rjmp	.+16     	; 0x38c <vfprintf+0xe6>
 37c:	8c 36       	cpi	r24, 0x6C	; 108
 37e:	21 f4       	brne	.+8      	; 0x388 <vfprintf+0xe2>
 380:	83 2d       	mov	r24, r3
 382:	80 68       	ori	r24, 0x80	; 128
 384:	38 2e       	mov	r3, r24
 386:	02 c0       	rjmp	.+4      	; 0x38c <vfprintf+0xe6>
 388:	88 36       	cpi	r24, 0x68	; 104
 38a:	41 f4       	brne	.+16     	; 0x39c <vfprintf+0xf6>
 38c:	f7 01       	movw	r30, r14
 38e:	93 fd       	sbrc	r25, 3
 390:	85 91       	lpm	r24, Z+
 392:	93 ff       	sbrs	r25, 3
 394:	81 91       	ld	r24, Z+
 396:	7f 01       	movw	r14, r30
 398:	81 11       	cpse	r24, r1
 39a:	b3 cf       	rjmp	.-154    	; 0x302 <vfprintf+0x5c>
 39c:	98 2f       	mov	r25, r24
 39e:	9f 7d       	andi	r25, 0xDF	; 223
 3a0:	95 54       	subi	r25, 0x45	; 69
 3a2:	93 30       	cpi	r25, 0x03	; 3
 3a4:	28 f4       	brcc	.+10     	; 0x3b0 <vfprintf+0x10a>
 3a6:	0c 5f       	subi	r16, 0xFC	; 252
 3a8:	1f 4f       	sbci	r17, 0xFF	; 255
 3aa:	9f e3       	ldi	r25, 0x3F	; 63
 3ac:	99 83       	std	Y+1, r25	; 0x01
 3ae:	0d c0       	rjmp	.+26     	; 0x3ca <vfprintf+0x124>
 3b0:	83 36       	cpi	r24, 0x63	; 99
 3b2:	31 f0       	breq	.+12     	; 0x3c0 <vfprintf+0x11a>
 3b4:	83 37       	cpi	r24, 0x73	; 115
 3b6:	71 f0       	breq	.+28     	; 0x3d4 <vfprintf+0x12e>
 3b8:	83 35       	cpi	r24, 0x53	; 83
 3ba:	09 f0       	breq	.+2      	; 0x3be <vfprintf+0x118>
 3bc:	59 c0       	rjmp	.+178    	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
 3be:	21 c0       	rjmp	.+66     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3c0:	f8 01       	movw	r30, r16
 3c2:	80 81       	ld	r24, Z
 3c4:	89 83       	std	Y+1, r24	; 0x01
 3c6:	0e 5f       	subi	r16, 0xFE	; 254
 3c8:	1f 4f       	sbci	r17, 0xFF	; 255
 3ca:	88 24       	eor	r8, r8
 3cc:	83 94       	inc	r8
 3ce:	91 2c       	mov	r9, r1
 3d0:	53 01       	movw	r10, r6
 3d2:	13 c0       	rjmp	.+38     	; 0x3fa <vfprintf+0x154>
 3d4:	28 01       	movw	r4, r16
 3d6:	f2 e0       	ldi	r31, 0x02	; 2
 3d8:	4f 0e       	add	r4, r31
 3da:	51 1c       	adc	r5, r1
 3dc:	f8 01       	movw	r30, r16
 3de:	a0 80       	ld	r10, Z
 3e0:	b1 80       	ldd	r11, Z+1	; 0x01
 3e2:	36 fe       	sbrs	r3, 6
 3e4:	03 c0       	rjmp	.+6      	; 0x3ec <vfprintf+0x146>
 3e6:	69 2d       	mov	r22, r9
 3e8:	70 e0       	ldi	r23, 0x00	; 0
 3ea:	02 c0       	rjmp	.+4      	; 0x3f0 <vfprintf+0x14a>
 3ec:	6f ef       	ldi	r22, 0xFF	; 255
 3ee:	7f ef       	ldi	r23, 0xFF	; 255
 3f0:	c5 01       	movw	r24, r10
 3f2:	0e 94 3f 03 	call	0x67e	; 0x67e <strnlen>
 3f6:	4c 01       	movw	r8, r24
 3f8:	82 01       	movw	r16, r4
 3fa:	f3 2d       	mov	r31, r3
 3fc:	ff 77       	andi	r31, 0x7F	; 127
 3fe:	3f 2e       	mov	r3, r31
 400:	16 c0       	rjmp	.+44     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 402:	28 01       	movw	r4, r16
 404:	22 e0       	ldi	r18, 0x02	; 2
 406:	42 0e       	add	r4, r18
 408:	51 1c       	adc	r5, r1
 40a:	f8 01       	movw	r30, r16
 40c:	a0 80       	ld	r10, Z
 40e:	b1 80       	ldd	r11, Z+1	; 0x01
 410:	36 fe       	sbrs	r3, 6
 412:	03 c0       	rjmp	.+6      	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 414:	69 2d       	mov	r22, r9
 416:	70 e0       	ldi	r23, 0x00	; 0
 418:	02 c0       	rjmp	.+4      	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 41a:	6f ef       	ldi	r22, 0xFF	; 255
 41c:	7f ef       	ldi	r23, 0xFF	; 255
 41e:	c5 01       	movw	r24, r10
 420:	0e 94 34 03 	call	0x668	; 0x668 <strnlen_P>
 424:	4c 01       	movw	r8, r24
 426:	f3 2d       	mov	r31, r3
 428:	f0 68       	ori	r31, 0x80	; 128
 42a:	3f 2e       	mov	r3, r31
 42c:	82 01       	movw	r16, r4
 42e:	33 fc       	sbrc	r3, 3
 430:	1b c0       	rjmp	.+54     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 432:	82 2d       	mov	r24, r2
 434:	90 e0       	ldi	r25, 0x00	; 0
 436:	88 16       	cp	r8, r24
 438:	99 06       	cpc	r9, r25
 43a:	b0 f4       	brcc	.+44     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 43c:	b6 01       	movw	r22, r12
 43e:	80 e2       	ldi	r24, 0x20	; 32
 440:	90 e0       	ldi	r25, 0x00	; 0
 442:	0e 94 4a 03 	call	0x694	; 0x694 <fputc>
 446:	2a 94       	dec	r2
 448:	f4 cf       	rjmp	.-24     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 44a:	f5 01       	movw	r30, r10
 44c:	37 fc       	sbrc	r3, 7
 44e:	85 91       	lpm	r24, Z+
 450:	37 fe       	sbrs	r3, 7
 452:	81 91       	ld	r24, Z+
 454:	5f 01       	movw	r10, r30
 456:	b6 01       	movw	r22, r12
 458:	90 e0       	ldi	r25, 0x00	; 0
 45a:	0e 94 4a 03 	call	0x694	; 0x694 <fputc>
 45e:	21 10       	cpse	r2, r1
 460:	2a 94       	dec	r2
 462:	21 e0       	ldi	r18, 0x01	; 1
 464:	82 1a       	sub	r8, r18
 466:	91 08       	sbc	r9, r1
 468:	81 14       	cp	r8, r1
 46a:	91 04       	cpc	r9, r1
 46c:	71 f7       	brne	.-36     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 46e:	e8 c0       	rjmp	.+464    	; 0x640 <__LOCK_REGION_LENGTH__+0x240>
 470:	84 36       	cpi	r24, 0x64	; 100
 472:	11 f0       	breq	.+4      	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 474:	89 36       	cpi	r24, 0x69	; 105
 476:	41 f5       	brne	.+80     	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 478:	f8 01       	movw	r30, r16
 47a:	37 fe       	sbrs	r3, 7
 47c:	07 c0       	rjmp	.+14     	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
 47e:	60 81       	ld	r22, Z
 480:	71 81       	ldd	r23, Z+1	; 0x01
 482:	82 81       	ldd	r24, Z+2	; 0x02
 484:	93 81       	ldd	r25, Z+3	; 0x03
 486:	0c 5f       	subi	r16, 0xFC	; 252
 488:	1f 4f       	sbci	r17, 0xFF	; 255
 48a:	08 c0       	rjmp	.+16     	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 48c:	60 81       	ld	r22, Z
 48e:	71 81       	ldd	r23, Z+1	; 0x01
 490:	07 2e       	mov	r0, r23
 492:	00 0c       	add	r0, r0
 494:	88 0b       	sbc	r24, r24
 496:	99 0b       	sbc	r25, r25
 498:	0e 5f       	subi	r16, 0xFE	; 254
 49a:	1f 4f       	sbci	r17, 0xFF	; 255
 49c:	f3 2d       	mov	r31, r3
 49e:	ff 76       	andi	r31, 0x6F	; 111
 4a0:	3f 2e       	mov	r3, r31
 4a2:	97 ff       	sbrs	r25, 7
 4a4:	09 c0       	rjmp	.+18     	; 0x4b8 <__LOCK_REGION_LENGTH__+0xb8>
 4a6:	90 95       	com	r25
 4a8:	80 95       	com	r24
 4aa:	70 95       	com	r23
 4ac:	61 95       	neg	r22
 4ae:	7f 4f       	sbci	r23, 0xFF	; 255
 4b0:	8f 4f       	sbci	r24, 0xFF	; 255
 4b2:	9f 4f       	sbci	r25, 0xFF	; 255
 4b4:	f0 68       	ori	r31, 0x80	; 128
 4b6:	3f 2e       	mov	r3, r31
 4b8:	2a e0       	ldi	r18, 0x0A	; 10
 4ba:	30 e0       	ldi	r19, 0x00	; 0
 4bc:	a3 01       	movw	r20, r6
 4be:	0e 94 86 03 	call	0x70c	; 0x70c <__ultoa_invert>
 4c2:	88 2e       	mov	r8, r24
 4c4:	86 18       	sub	r8, r6
 4c6:	45 c0       	rjmp	.+138    	; 0x552 <__LOCK_REGION_LENGTH__+0x152>
 4c8:	85 37       	cpi	r24, 0x75	; 117
 4ca:	31 f4       	brne	.+12     	; 0x4d8 <__LOCK_REGION_LENGTH__+0xd8>
 4cc:	23 2d       	mov	r18, r3
 4ce:	2f 7e       	andi	r18, 0xEF	; 239
 4d0:	b2 2e       	mov	r11, r18
 4d2:	2a e0       	ldi	r18, 0x0A	; 10
 4d4:	30 e0       	ldi	r19, 0x00	; 0
 4d6:	25 c0       	rjmp	.+74     	; 0x522 <__LOCK_REGION_LENGTH__+0x122>
 4d8:	93 2d       	mov	r25, r3
 4da:	99 7f       	andi	r25, 0xF9	; 249
 4dc:	b9 2e       	mov	r11, r25
 4de:	8f 36       	cpi	r24, 0x6F	; 111
 4e0:	c1 f0       	breq	.+48     	; 0x512 <__LOCK_REGION_LENGTH__+0x112>
 4e2:	18 f4       	brcc	.+6      	; 0x4ea <__LOCK_REGION_LENGTH__+0xea>
 4e4:	88 35       	cpi	r24, 0x58	; 88
 4e6:	79 f0       	breq	.+30     	; 0x506 <__LOCK_REGION_LENGTH__+0x106>
 4e8:	b5 c0       	rjmp	.+362    	; 0x654 <__LOCK_REGION_LENGTH__+0x254>
 4ea:	80 37       	cpi	r24, 0x70	; 112
 4ec:	19 f0       	breq	.+6      	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
 4ee:	88 37       	cpi	r24, 0x78	; 120
 4f0:	21 f0       	breq	.+8      	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 4f2:	b0 c0       	rjmp	.+352    	; 0x654 <__LOCK_REGION_LENGTH__+0x254>
 4f4:	e9 2f       	mov	r30, r25
 4f6:	e0 61       	ori	r30, 0x10	; 16
 4f8:	be 2e       	mov	r11, r30
 4fa:	b4 fe       	sbrs	r11, 4
 4fc:	0d c0       	rjmp	.+26     	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
 4fe:	fb 2d       	mov	r31, r11
 500:	f4 60       	ori	r31, 0x04	; 4
 502:	bf 2e       	mov	r11, r31
 504:	09 c0       	rjmp	.+18     	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
 506:	34 fe       	sbrs	r3, 4
 508:	0a c0       	rjmp	.+20     	; 0x51e <__LOCK_REGION_LENGTH__+0x11e>
 50a:	29 2f       	mov	r18, r25
 50c:	26 60       	ori	r18, 0x06	; 6
 50e:	b2 2e       	mov	r11, r18
 510:	06 c0       	rjmp	.+12     	; 0x51e <__LOCK_REGION_LENGTH__+0x11e>
 512:	28 e0       	ldi	r18, 0x08	; 8
 514:	30 e0       	ldi	r19, 0x00	; 0
 516:	05 c0       	rjmp	.+10     	; 0x522 <__LOCK_REGION_LENGTH__+0x122>
 518:	20 e1       	ldi	r18, 0x10	; 16
 51a:	30 e0       	ldi	r19, 0x00	; 0
 51c:	02 c0       	rjmp	.+4      	; 0x522 <__LOCK_REGION_LENGTH__+0x122>
 51e:	20 e1       	ldi	r18, 0x10	; 16
 520:	32 e0       	ldi	r19, 0x02	; 2
 522:	f8 01       	movw	r30, r16
 524:	b7 fe       	sbrs	r11, 7
 526:	07 c0       	rjmp	.+14     	; 0x536 <__LOCK_REGION_LENGTH__+0x136>
 528:	60 81       	ld	r22, Z
 52a:	71 81       	ldd	r23, Z+1	; 0x01
 52c:	82 81       	ldd	r24, Z+2	; 0x02
 52e:	93 81       	ldd	r25, Z+3	; 0x03
 530:	0c 5f       	subi	r16, 0xFC	; 252
 532:	1f 4f       	sbci	r17, 0xFF	; 255
 534:	06 c0       	rjmp	.+12     	; 0x542 <__LOCK_REGION_LENGTH__+0x142>
 536:	60 81       	ld	r22, Z
 538:	71 81       	ldd	r23, Z+1	; 0x01
 53a:	80 e0       	ldi	r24, 0x00	; 0
 53c:	90 e0       	ldi	r25, 0x00	; 0
 53e:	0e 5f       	subi	r16, 0xFE	; 254
 540:	1f 4f       	sbci	r17, 0xFF	; 255
 542:	a3 01       	movw	r20, r6
 544:	0e 94 86 03 	call	0x70c	; 0x70c <__ultoa_invert>
 548:	88 2e       	mov	r8, r24
 54a:	86 18       	sub	r8, r6
 54c:	fb 2d       	mov	r31, r11
 54e:	ff 77       	andi	r31, 0x7F	; 127
 550:	3f 2e       	mov	r3, r31
 552:	36 fe       	sbrs	r3, 6
 554:	0d c0       	rjmp	.+26     	; 0x570 <__LOCK_REGION_LENGTH__+0x170>
 556:	23 2d       	mov	r18, r3
 558:	2e 7f       	andi	r18, 0xFE	; 254
 55a:	a2 2e       	mov	r10, r18
 55c:	89 14       	cp	r8, r9
 55e:	58 f4       	brcc	.+22     	; 0x576 <__LOCK_REGION_LENGTH__+0x176>
 560:	34 fe       	sbrs	r3, 4
 562:	0b c0       	rjmp	.+22     	; 0x57a <__LOCK_REGION_LENGTH__+0x17a>
 564:	32 fc       	sbrc	r3, 2
 566:	09 c0       	rjmp	.+18     	; 0x57a <__LOCK_REGION_LENGTH__+0x17a>
 568:	83 2d       	mov	r24, r3
 56a:	8e 7e       	andi	r24, 0xEE	; 238
 56c:	a8 2e       	mov	r10, r24
 56e:	05 c0       	rjmp	.+10     	; 0x57a <__LOCK_REGION_LENGTH__+0x17a>
 570:	b8 2c       	mov	r11, r8
 572:	a3 2c       	mov	r10, r3
 574:	03 c0       	rjmp	.+6      	; 0x57c <__LOCK_REGION_LENGTH__+0x17c>
 576:	b8 2c       	mov	r11, r8
 578:	01 c0       	rjmp	.+2      	; 0x57c <__LOCK_REGION_LENGTH__+0x17c>
 57a:	b9 2c       	mov	r11, r9
 57c:	a4 fe       	sbrs	r10, 4
 57e:	0f c0       	rjmp	.+30     	; 0x59e <__LOCK_REGION_LENGTH__+0x19e>
 580:	fe 01       	movw	r30, r28
 582:	e8 0d       	add	r30, r8
 584:	f1 1d       	adc	r31, r1
 586:	80 81       	ld	r24, Z
 588:	80 33       	cpi	r24, 0x30	; 48
 58a:	21 f4       	brne	.+8      	; 0x594 <__LOCK_REGION_LENGTH__+0x194>
 58c:	9a 2d       	mov	r25, r10
 58e:	99 7e       	andi	r25, 0xE9	; 233
 590:	a9 2e       	mov	r10, r25
 592:	09 c0       	rjmp	.+18     	; 0x5a6 <__LOCK_REGION_LENGTH__+0x1a6>
 594:	a2 fe       	sbrs	r10, 2
 596:	06 c0       	rjmp	.+12     	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
 598:	b3 94       	inc	r11
 59a:	b3 94       	inc	r11
 59c:	04 c0       	rjmp	.+8      	; 0x5a6 <__LOCK_REGION_LENGTH__+0x1a6>
 59e:	8a 2d       	mov	r24, r10
 5a0:	86 78       	andi	r24, 0x86	; 134
 5a2:	09 f0       	breq	.+2      	; 0x5a6 <__LOCK_REGION_LENGTH__+0x1a6>
 5a4:	b3 94       	inc	r11
 5a6:	a3 fc       	sbrc	r10, 3
 5a8:	11 c0       	rjmp	.+34     	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
 5aa:	a0 fe       	sbrs	r10, 0
 5ac:	06 c0       	rjmp	.+12     	; 0x5ba <__LOCK_REGION_LENGTH__+0x1ba>
 5ae:	b2 14       	cp	r11, r2
 5b0:	88 f4       	brcc	.+34     	; 0x5d4 <__LOCK_REGION_LENGTH__+0x1d4>
 5b2:	28 0c       	add	r2, r8
 5b4:	92 2c       	mov	r9, r2
 5b6:	9b 18       	sub	r9, r11
 5b8:	0e c0       	rjmp	.+28     	; 0x5d6 <__LOCK_REGION_LENGTH__+0x1d6>
 5ba:	b2 14       	cp	r11, r2
 5bc:	60 f4       	brcc	.+24     	; 0x5d6 <__LOCK_REGION_LENGTH__+0x1d6>
 5be:	b6 01       	movw	r22, r12
 5c0:	80 e2       	ldi	r24, 0x20	; 32
 5c2:	90 e0       	ldi	r25, 0x00	; 0
 5c4:	0e 94 4a 03 	call	0x694	; 0x694 <fputc>
 5c8:	b3 94       	inc	r11
 5ca:	f7 cf       	rjmp	.-18     	; 0x5ba <__LOCK_REGION_LENGTH__+0x1ba>
 5cc:	b2 14       	cp	r11, r2
 5ce:	18 f4       	brcc	.+6      	; 0x5d6 <__LOCK_REGION_LENGTH__+0x1d6>
 5d0:	2b 18       	sub	r2, r11
 5d2:	02 c0       	rjmp	.+4      	; 0x5d8 <__LOCK_REGION_LENGTH__+0x1d8>
 5d4:	98 2c       	mov	r9, r8
 5d6:	21 2c       	mov	r2, r1
 5d8:	a4 fe       	sbrs	r10, 4
 5da:	10 c0       	rjmp	.+32     	; 0x5fc <__LOCK_REGION_LENGTH__+0x1fc>
 5dc:	b6 01       	movw	r22, r12
 5de:	80 e3       	ldi	r24, 0x30	; 48
 5e0:	90 e0       	ldi	r25, 0x00	; 0
 5e2:	0e 94 4a 03 	call	0x694	; 0x694 <fputc>
 5e6:	a2 fe       	sbrs	r10, 2
 5e8:	17 c0       	rjmp	.+46     	; 0x618 <__LOCK_REGION_LENGTH__+0x218>
 5ea:	a1 fc       	sbrc	r10, 1
 5ec:	03 c0       	rjmp	.+6      	; 0x5f4 <__LOCK_REGION_LENGTH__+0x1f4>
 5ee:	88 e7       	ldi	r24, 0x78	; 120
 5f0:	90 e0       	ldi	r25, 0x00	; 0
 5f2:	02 c0       	rjmp	.+4      	; 0x5f8 <__LOCK_REGION_LENGTH__+0x1f8>
 5f4:	88 e5       	ldi	r24, 0x58	; 88
 5f6:	90 e0       	ldi	r25, 0x00	; 0
 5f8:	b6 01       	movw	r22, r12
 5fa:	0c c0       	rjmp	.+24     	; 0x614 <__LOCK_REGION_LENGTH__+0x214>
 5fc:	8a 2d       	mov	r24, r10
 5fe:	86 78       	andi	r24, 0x86	; 134
 600:	59 f0       	breq	.+22     	; 0x618 <__LOCK_REGION_LENGTH__+0x218>
 602:	a1 fe       	sbrs	r10, 1
 604:	02 c0       	rjmp	.+4      	; 0x60a <__LOCK_REGION_LENGTH__+0x20a>
 606:	8b e2       	ldi	r24, 0x2B	; 43
 608:	01 c0       	rjmp	.+2      	; 0x60c <__LOCK_REGION_LENGTH__+0x20c>
 60a:	80 e2       	ldi	r24, 0x20	; 32
 60c:	a7 fc       	sbrc	r10, 7
 60e:	8d e2       	ldi	r24, 0x2D	; 45
 610:	b6 01       	movw	r22, r12
 612:	90 e0       	ldi	r25, 0x00	; 0
 614:	0e 94 4a 03 	call	0x694	; 0x694 <fputc>
 618:	89 14       	cp	r8, r9
 61a:	38 f4       	brcc	.+14     	; 0x62a <__LOCK_REGION_LENGTH__+0x22a>
 61c:	b6 01       	movw	r22, r12
 61e:	80 e3       	ldi	r24, 0x30	; 48
 620:	90 e0       	ldi	r25, 0x00	; 0
 622:	0e 94 4a 03 	call	0x694	; 0x694 <fputc>
 626:	9a 94       	dec	r9
 628:	f7 cf       	rjmp	.-18     	; 0x618 <__LOCK_REGION_LENGTH__+0x218>
 62a:	8a 94       	dec	r8
 62c:	f3 01       	movw	r30, r6
 62e:	e8 0d       	add	r30, r8
 630:	f1 1d       	adc	r31, r1
 632:	80 81       	ld	r24, Z
 634:	b6 01       	movw	r22, r12
 636:	90 e0       	ldi	r25, 0x00	; 0
 638:	0e 94 4a 03 	call	0x694	; 0x694 <fputc>
 63c:	81 10       	cpse	r8, r1
 63e:	f5 cf       	rjmp	.-22     	; 0x62a <__LOCK_REGION_LENGTH__+0x22a>
 640:	22 20       	and	r2, r2
 642:	09 f4       	brne	.+2      	; 0x646 <__LOCK_REGION_LENGTH__+0x246>
 644:	42 ce       	rjmp	.-892    	; 0x2ca <vfprintf+0x24>
 646:	b6 01       	movw	r22, r12
 648:	80 e2       	ldi	r24, 0x20	; 32
 64a:	90 e0       	ldi	r25, 0x00	; 0
 64c:	0e 94 4a 03 	call	0x694	; 0x694 <fputc>
 650:	2a 94       	dec	r2
 652:	f6 cf       	rjmp	.-20     	; 0x640 <__LOCK_REGION_LENGTH__+0x240>
 654:	f6 01       	movw	r30, r12
 656:	86 81       	ldd	r24, Z+6	; 0x06
 658:	97 81       	ldd	r25, Z+7	; 0x07
 65a:	02 c0       	rjmp	.+4      	; 0x660 <__LOCK_REGION_LENGTH__+0x260>
 65c:	8f ef       	ldi	r24, 0xFF	; 255
 65e:	9f ef       	ldi	r25, 0xFF	; 255
 660:	2b 96       	adiw	r28, 0x0b	; 11
 662:	e2 e1       	ldi	r30, 0x12	; 18
 664:	0c 94 00 04 	jmp	0x800	; 0x800 <__epilogue_restores__>

00000668 <strnlen_P>:
 668:	fc 01       	movw	r30, r24
 66a:	05 90       	lpm	r0, Z+
 66c:	61 50       	subi	r22, 0x01	; 1
 66e:	70 40       	sbci	r23, 0x00	; 0
 670:	01 10       	cpse	r0, r1
 672:	d8 f7       	brcc	.-10     	; 0x66a <strnlen_P+0x2>
 674:	80 95       	com	r24
 676:	90 95       	com	r25
 678:	8e 0f       	add	r24, r30
 67a:	9f 1f       	adc	r25, r31
 67c:	08 95       	ret

0000067e <strnlen>:
 67e:	fc 01       	movw	r30, r24
 680:	61 50       	subi	r22, 0x01	; 1
 682:	70 40       	sbci	r23, 0x00	; 0
 684:	01 90       	ld	r0, Z+
 686:	01 10       	cpse	r0, r1
 688:	d8 f7       	brcc	.-10     	; 0x680 <strnlen+0x2>
 68a:	80 95       	com	r24
 68c:	90 95       	com	r25
 68e:	8e 0f       	add	r24, r30
 690:	9f 1f       	adc	r25, r31
 692:	08 95       	ret

00000694 <fputc>:
 694:	0f 93       	push	r16
 696:	1f 93       	push	r17
 698:	cf 93       	push	r28
 69a:	df 93       	push	r29
 69c:	fb 01       	movw	r30, r22
 69e:	23 81       	ldd	r18, Z+3	; 0x03
 6a0:	21 fd       	sbrc	r18, 1
 6a2:	03 c0       	rjmp	.+6      	; 0x6aa <fputc+0x16>
 6a4:	8f ef       	ldi	r24, 0xFF	; 255
 6a6:	9f ef       	ldi	r25, 0xFF	; 255
 6a8:	2c c0       	rjmp	.+88     	; 0x702 <fputc+0x6e>
 6aa:	22 ff       	sbrs	r18, 2
 6ac:	16 c0       	rjmp	.+44     	; 0x6da <fputc+0x46>
 6ae:	46 81       	ldd	r20, Z+6	; 0x06
 6b0:	57 81       	ldd	r21, Z+7	; 0x07
 6b2:	24 81       	ldd	r18, Z+4	; 0x04
 6b4:	35 81       	ldd	r19, Z+5	; 0x05
 6b6:	42 17       	cp	r20, r18
 6b8:	53 07       	cpc	r21, r19
 6ba:	44 f4       	brge	.+16     	; 0x6cc <fputc+0x38>
 6bc:	a0 81       	ld	r26, Z
 6be:	b1 81       	ldd	r27, Z+1	; 0x01
 6c0:	9d 01       	movw	r18, r26
 6c2:	2f 5f       	subi	r18, 0xFF	; 255
 6c4:	3f 4f       	sbci	r19, 0xFF	; 255
 6c6:	31 83       	std	Z+1, r19	; 0x01
 6c8:	20 83       	st	Z, r18
 6ca:	8c 93       	st	X, r24
 6cc:	26 81       	ldd	r18, Z+6	; 0x06
 6ce:	37 81       	ldd	r19, Z+7	; 0x07
 6d0:	2f 5f       	subi	r18, 0xFF	; 255
 6d2:	3f 4f       	sbci	r19, 0xFF	; 255
 6d4:	37 83       	std	Z+7, r19	; 0x07
 6d6:	26 83       	std	Z+6, r18	; 0x06
 6d8:	14 c0       	rjmp	.+40     	; 0x702 <fputc+0x6e>
 6da:	8b 01       	movw	r16, r22
 6dc:	ec 01       	movw	r28, r24
 6de:	fb 01       	movw	r30, r22
 6e0:	00 84       	ldd	r0, Z+8	; 0x08
 6e2:	f1 85       	ldd	r31, Z+9	; 0x09
 6e4:	e0 2d       	mov	r30, r0
 6e6:	09 95       	icall
 6e8:	89 2b       	or	r24, r25
 6ea:	e1 f6       	brne	.-72     	; 0x6a4 <fputc+0x10>
 6ec:	d8 01       	movw	r26, r16
 6ee:	16 96       	adiw	r26, 0x06	; 6
 6f0:	8d 91       	ld	r24, X+
 6f2:	9c 91       	ld	r25, X
 6f4:	17 97       	sbiw	r26, 0x07	; 7
 6f6:	01 96       	adiw	r24, 0x01	; 1
 6f8:	17 96       	adiw	r26, 0x07	; 7
 6fa:	9c 93       	st	X, r25
 6fc:	8e 93       	st	-X, r24
 6fe:	16 97       	sbiw	r26, 0x06	; 6
 700:	ce 01       	movw	r24, r28
 702:	df 91       	pop	r29
 704:	cf 91       	pop	r28
 706:	1f 91       	pop	r17
 708:	0f 91       	pop	r16
 70a:	08 95       	ret

0000070c <__ultoa_invert>:
 70c:	fa 01       	movw	r30, r20
 70e:	aa 27       	eor	r26, r26
 710:	28 30       	cpi	r18, 0x08	; 8
 712:	51 f1       	breq	.+84     	; 0x768 <__ultoa_invert+0x5c>
 714:	20 31       	cpi	r18, 0x10	; 16
 716:	81 f1       	breq	.+96     	; 0x778 <__ultoa_invert+0x6c>
 718:	e8 94       	clt
 71a:	6f 93       	push	r22
 71c:	6e 7f       	andi	r22, 0xFE	; 254
 71e:	6e 5f       	subi	r22, 0xFE	; 254
 720:	7f 4f       	sbci	r23, 0xFF	; 255
 722:	8f 4f       	sbci	r24, 0xFF	; 255
 724:	9f 4f       	sbci	r25, 0xFF	; 255
 726:	af 4f       	sbci	r26, 0xFF	; 255
 728:	b1 e0       	ldi	r27, 0x01	; 1
 72a:	3e d0       	rcall	.+124    	; 0x7a8 <__ultoa_invert+0x9c>
 72c:	b4 e0       	ldi	r27, 0x04	; 4
 72e:	3c d0       	rcall	.+120    	; 0x7a8 <__ultoa_invert+0x9c>
 730:	67 0f       	add	r22, r23
 732:	78 1f       	adc	r23, r24
 734:	89 1f       	adc	r24, r25
 736:	9a 1f       	adc	r25, r26
 738:	a1 1d       	adc	r26, r1
 73a:	68 0f       	add	r22, r24
 73c:	79 1f       	adc	r23, r25
 73e:	8a 1f       	adc	r24, r26
 740:	91 1d       	adc	r25, r1
 742:	a1 1d       	adc	r26, r1
 744:	6a 0f       	add	r22, r26
 746:	71 1d       	adc	r23, r1
 748:	81 1d       	adc	r24, r1
 74a:	91 1d       	adc	r25, r1
 74c:	a1 1d       	adc	r26, r1
 74e:	20 d0       	rcall	.+64     	; 0x790 <__ultoa_invert+0x84>
 750:	09 f4       	brne	.+2      	; 0x754 <__ultoa_invert+0x48>
 752:	68 94       	set
 754:	3f 91       	pop	r19
 756:	2a e0       	ldi	r18, 0x0A	; 10
 758:	26 9f       	mul	r18, r22
 75a:	11 24       	eor	r1, r1
 75c:	30 19       	sub	r19, r0
 75e:	30 5d       	subi	r19, 0xD0	; 208
 760:	31 93       	st	Z+, r19
 762:	de f6       	brtc	.-74     	; 0x71a <__ultoa_invert+0xe>
 764:	cf 01       	movw	r24, r30
 766:	08 95       	ret
 768:	46 2f       	mov	r20, r22
 76a:	47 70       	andi	r20, 0x07	; 7
 76c:	40 5d       	subi	r20, 0xD0	; 208
 76e:	41 93       	st	Z+, r20
 770:	b3 e0       	ldi	r27, 0x03	; 3
 772:	0f d0       	rcall	.+30     	; 0x792 <__ultoa_invert+0x86>
 774:	c9 f7       	brne	.-14     	; 0x768 <__ultoa_invert+0x5c>
 776:	f6 cf       	rjmp	.-20     	; 0x764 <__ultoa_invert+0x58>
 778:	46 2f       	mov	r20, r22
 77a:	4f 70       	andi	r20, 0x0F	; 15
 77c:	40 5d       	subi	r20, 0xD0	; 208
 77e:	4a 33       	cpi	r20, 0x3A	; 58
 780:	18 f0       	brcs	.+6      	; 0x788 <__ultoa_invert+0x7c>
 782:	49 5d       	subi	r20, 0xD9	; 217
 784:	31 fd       	sbrc	r19, 1
 786:	40 52       	subi	r20, 0x20	; 32
 788:	41 93       	st	Z+, r20
 78a:	02 d0       	rcall	.+4      	; 0x790 <__ultoa_invert+0x84>
 78c:	a9 f7       	brne	.-22     	; 0x778 <__ultoa_invert+0x6c>
 78e:	ea cf       	rjmp	.-44     	; 0x764 <__ultoa_invert+0x58>
 790:	b4 e0       	ldi	r27, 0x04	; 4
 792:	a6 95       	lsr	r26
 794:	97 95       	ror	r25
 796:	87 95       	ror	r24
 798:	77 95       	ror	r23
 79a:	67 95       	ror	r22
 79c:	ba 95       	dec	r27
 79e:	c9 f7       	brne	.-14     	; 0x792 <__ultoa_invert+0x86>
 7a0:	00 97       	sbiw	r24, 0x00	; 0
 7a2:	61 05       	cpc	r22, r1
 7a4:	71 05       	cpc	r23, r1
 7a6:	08 95       	ret
 7a8:	9b 01       	movw	r18, r22
 7aa:	ac 01       	movw	r20, r24
 7ac:	0a 2e       	mov	r0, r26
 7ae:	06 94       	lsr	r0
 7b0:	57 95       	ror	r21
 7b2:	47 95       	ror	r20
 7b4:	37 95       	ror	r19
 7b6:	27 95       	ror	r18
 7b8:	ba 95       	dec	r27
 7ba:	c9 f7       	brne	.-14     	; 0x7ae <__ultoa_invert+0xa2>
 7bc:	62 0f       	add	r22, r18
 7be:	73 1f       	adc	r23, r19
 7c0:	84 1f       	adc	r24, r20
 7c2:	95 1f       	adc	r25, r21
 7c4:	a0 1d       	adc	r26, r0
 7c6:	08 95       	ret

000007c8 <__prologue_saves__>:
 7c8:	2f 92       	push	r2
 7ca:	3f 92       	push	r3
 7cc:	4f 92       	push	r4
 7ce:	5f 92       	push	r5
 7d0:	6f 92       	push	r6
 7d2:	7f 92       	push	r7
 7d4:	8f 92       	push	r8
 7d6:	9f 92       	push	r9
 7d8:	af 92       	push	r10
 7da:	bf 92       	push	r11
 7dc:	cf 92       	push	r12
 7de:	df 92       	push	r13
 7e0:	ef 92       	push	r14
 7e2:	ff 92       	push	r15
 7e4:	0f 93       	push	r16
 7e6:	1f 93       	push	r17
 7e8:	cf 93       	push	r28
 7ea:	df 93       	push	r29
 7ec:	cd b7       	in	r28, 0x3d	; 61
 7ee:	de b7       	in	r29, 0x3e	; 62
 7f0:	ca 1b       	sub	r28, r26
 7f2:	db 0b       	sbc	r29, r27
 7f4:	0f b6       	in	r0, 0x3f	; 63
 7f6:	f8 94       	cli
 7f8:	de bf       	out	0x3e, r29	; 62
 7fa:	0f be       	out	0x3f, r0	; 63
 7fc:	cd bf       	out	0x3d, r28	; 61
 7fe:	09 94       	ijmp

00000800 <__epilogue_restores__>:
 800:	2a 88       	ldd	r2, Y+18	; 0x12
 802:	39 88       	ldd	r3, Y+17	; 0x11
 804:	48 88       	ldd	r4, Y+16	; 0x10
 806:	5f 84       	ldd	r5, Y+15	; 0x0f
 808:	6e 84       	ldd	r6, Y+14	; 0x0e
 80a:	7d 84       	ldd	r7, Y+13	; 0x0d
 80c:	8c 84       	ldd	r8, Y+12	; 0x0c
 80e:	9b 84       	ldd	r9, Y+11	; 0x0b
 810:	aa 84       	ldd	r10, Y+10	; 0x0a
 812:	b9 84       	ldd	r11, Y+9	; 0x09
 814:	c8 84       	ldd	r12, Y+8	; 0x08
 816:	df 80       	ldd	r13, Y+7	; 0x07
 818:	ee 80       	ldd	r14, Y+6	; 0x06
 81a:	fd 80       	ldd	r15, Y+5	; 0x05
 81c:	0c 81       	ldd	r16, Y+4	; 0x04
 81e:	1b 81       	ldd	r17, Y+3	; 0x03
 820:	aa 81       	ldd	r26, Y+2	; 0x02
 822:	b9 81       	ldd	r27, Y+1	; 0x01
 824:	ce 0f       	add	r28, r30
 826:	d1 1d       	adc	r29, r1
 828:	0f b6       	in	r0, 0x3f	; 63
 82a:	f8 94       	cli
 82c:	de bf       	out	0x3e, r29	; 62
 82e:	0f be       	out	0x3f, r0	; 63
 830:	cd bf       	out	0x3d, r28	; 61
 832:	ed 01       	movw	r28, r26
 834:	08 95       	ret

00000836 <_exit>:
 836:	f8 94       	cli

00000838 <__stop_program>:
 838:	ff cf       	rjmp	.-2      	; 0x838 <__stop_program>
