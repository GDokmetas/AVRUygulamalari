
AVR7KarasimsekKolay.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000015a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000106  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000015a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000018c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000001cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000773  00000000  00000000  000001ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000696  00000000  00000000  0000095f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002a2  00000000  00000000  00000ff5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00001298  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003b2  00000000  00000000  000012bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000b4  00000000  00000000  0000166e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00001722  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 81 00 	jmp	0x102	; 0x102 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
#include <util/delay.h>

int main(void)
{
	
	DDRD = 0xFF;
  80:	8f ef       	ldi	r24, 0xFF	; 255
  82:	8a b9       	out	0x0a, r24	; 10
	while (1)
	{
		
		for(int i = 0; i < 7; i++)
		{
			PORTD |=_BV(i);
  84:	61 e0       	ldi	r22, 0x01	; 1
  86:	70 e0       	ldi	r23, 0x00	; 0
	DDRD = 0xFF;
	int bekleme = 150;
	while (1)
	{
		
		for(int i = 0; i < 7; i++)
  88:	20 e0       	ldi	r18, 0x00	; 0
  8a:	30 e0       	ldi	r19, 0x00	; 0
		{
			PORTD |=_BV(i);
  8c:	4b b1       	in	r20, 0x0b	; 11
  8e:	cb 01       	movw	r24, r22
  90:	02 2e       	mov	r0, r18
  92:	02 c0       	rjmp	.+4      	; 0x98 <main+0x18>
  94:	88 0f       	add	r24, r24
  96:	99 1f       	adc	r25, r25
  98:	0a 94       	dec	r0
  9a:	e2 f7       	brpl	.-8      	; 0x94 <main+0x14>
  9c:	94 2f       	mov	r25, r20
  9e:	98 2b       	or	r25, r24
  a0:	9b b9       	out	0x0b, r25	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  a2:	4f ef       	ldi	r20, 0xFF	; 255
  a4:	52 e5       	ldi	r21, 0x52	; 82
  a6:	e7 e0       	ldi	r30, 0x07	; 7
  a8:	41 50       	subi	r20, 0x01	; 1
  aa:	50 40       	sbci	r21, 0x00	; 0
  ac:	e0 40       	sbci	r30, 0x00	; 0
  ae:	e1 f7       	brne	.-8      	; 0xa8 <main+0x28>
  b0:	00 c0       	rjmp	.+0      	; 0xb2 <main+0x32>
  b2:	00 00       	nop
			_delay_ms(bekleme);
			PORTD &=~_BV(i);
  b4:	9b b1       	in	r25, 0x0b	; 11
  b6:	80 95       	com	r24
  b8:	89 23       	and	r24, r25
  ba:	8b b9       	out	0x0b, r24	; 11
	DDRD = 0xFF;
	int bekleme = 150;
	while (1)
	{
		
		for(int i = 0; i < 7; i++)
  bc:	2f 5f       	subi	r18, 0xFF	; 255
  be:	3f 4f       	sbci	r19, 0xFF	; 255
  c0:	27 30       	cpi	r18, 0x07	; 7
  c2:	31 05       	cpc	r19, r1
  c4:	19 f7       	brne	.-58     	; 0x8c <main+0xc>
  c6:	27 e0       	ldi	r18, 0x07	; 7
  c8:	30 e0       	ldi	r19, 0x00	; 0
			PORTD &=~_BV(i);
		}
		
		for(int i = 7; i > 0; i--)
		{
			PORTD |=_BV(i);
  ca:	4b b1       	in	r20, 0x0b	; 11
  cc:	cb 01       	movw	r24, r22
  ce:	02 2e       	mov	r0, r18
  d0:	02 c0       	rjmp	.+4      	; 0xd6 <main+0x56>
  d2:	88 0f       	add	r24, r24
  d4:	99 1f       	adc	r25, r25
  d6:	0a 94       	dec	r0
  d8:	e2 f7       	brpl	.-8      	; 0xd2 <main+0x52>
  da:	94 2f       	mov	r25, r20
  dc:	98 2b       	or	r25, r24
  de:	9b b9       	out	0x0b, r25	; 11
  e0:	4f ef       	ldi	r20, 0xFF	; 255
  e2:	52 e5       	ldi	r21, 0x52	; 82
  e4:	e7 e0       	ldi	r30, 0x07	; 7
  e6:	41 50       	subi	r20, 0x01	; 1
  e8:	50 40       	sbci	r21, 0x00	; 0
  ea:	e0 40       	sbci	r30, 0x00	; 0
  ec:	e1 f7       	brne	.-8      	; 0xe6 <main+0x66>
  ee:	00 c0       	rjmp	.+0      	; 0xf0 <main+0x70>
  f0:	00 00       	nop
			_delay_ms(bekleme);
			PORTD &=~_BV(i);
  f2:	9b b1       	in	r25, 0x0b	; 11
  f4:	80 95       	com	r24
  f6:	89 23       	and	r24, r25
  f8:	8b b9       	out	0x0b, r24	; 11
			PORTD |=_BV(i);
			_delay_ms(bekleme);
			PORTD &=~_BV(i);
		}
		
		for(int i = 7; i > 0; i--)
  fa:	21 50       	subi	r18, 0x01	; 1
  fc:	31 09       	sbc	r19, r1
  fe:	29 f7       	brne	.-54     	; 0xca <main+0x4a>
 100:	c3 cf       	rjmp	.-122    	; 0x88 <main+0x8>

00000102 <_exit>:
 102:	f8 94       	cli

00000104 <__stop_program>:
 104:	ff cf       	rjmp	.-2      	; 0x104 <__stop_program>
